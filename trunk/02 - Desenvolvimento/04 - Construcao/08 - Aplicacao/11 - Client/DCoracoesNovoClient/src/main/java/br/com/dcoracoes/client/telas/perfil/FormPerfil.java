/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CadastroPerfilForm.java
 *
 * Created on 03/05/2012, 22:36:11
 */
package br.com.dcoracoes.client.telas.perfil;

import br.com.dcoracoes.client.ControleAcesso;
import br.com.dcoracoes.client.classes.serverimpl.PerfilServerImpl;
import br.com.dcoracoes.client.interfaces.InterfaceCadastroCompleto;
import br.com.dcoracoes.client.swingworker.SwingWorkerPerfil;
import br.com.dcoracoes.client.util.MensagensUtil;
import br.com.dcoracoes.client.util.MetodosUtil;
import br.com.dcoracoes.client.util.message.MessagePerfil;
import br.com.dcoracoes.servico.service.AssociaPerfilPermissao;
import br.com.dcoracoes.servico.service.AssociaPerfilPermissaoFK;
import br.com.dcoracoes.servico.service.Perfil;
import br.com.dcoracoes.servico.service.Permissao;
import static java.awt.Frame.NORMAL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cleberson
 */
public class FormPerfil extends javax.swing.JFrame implements InterfaceCadastroCompleto {

    private Perfil perfil;
    private List<Permissao> listTodasPermissoes;
    private List<AssociaPerfilPermissao> listAssociaPerfilPermissao;

    public void setPerfil(Perfil perfil) {
        this.perfil = perfil;
        popularTela();        
        
        disableTela(false);
        btnEditar.setEnabled(ControleAcesso.ATIVA_BTN_CADASTRAR_PERFIL);
        btnSalvar.setEnabled(false);
    }

    /** Creates new form CadastroPerfilForm */
    public FormPerfil() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSuperButton = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePermissao = new JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Perfil de Usu√°rio");
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("src/main/resources/imagens/outras/icon_SGC.gif"));
        setResizable(false);

        panelSuperButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, new java.awt.Color(43, 115, 186)));
        panelSuperButton.setPreferredSize(new java.awt.Dimension(885, 67));

        btnNovo.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/document-new.png"))); // NOI18N
        btnNovo.setText("NOVO");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/img_edit_32x32.png"))); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnSalvar.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/img_salvar_32x32.png"))); // NOI18N
        btnSalvar.setText("SALVAR");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/system-search.png"))); // NOI18N
        btnPesquisar.setText("PESQUISAR");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/sair32x32.png"))); // NOI18N
        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(40, 60));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        jPanel7.setPreferredSize(new java.awt.Dimension(30, 41));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 4, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        jPanel8.setPreferredSize(new java.awt.Dimension(30, 41));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        jPanel9.setPreferredSize(new java.awt.Dimension(30, 41));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelSuperButtonLayout = new javax.swing.GroupLayout(panelSuperButton);
        panelSuperButton.setLayout(panelSuperButtonLayout);
        panelSuperButtonLayout.setHorizontalGroup(
            panelSuperButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 4, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 4, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 6, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 5, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelSuperButtonLayout.setVerticalGroup(
            panelSuperButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSuperButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelSuperButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                        .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                        .addComponent(btnSair, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnNovo)))
                .addContainerGap())
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(43, 115, 186)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setForeground(new java.awt.Color(43, 115, 186));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("PERFIL");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setText("NOME:");

        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });

        jLabel2.setText("DESCRI√á√ÉO:");

        txtDescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescricaoKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablePermissao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Descri√ß√£o Permiss√£o"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablePermissao);
        tablePermissao.getColumnModel().getColumn(0).setMinWidth(30);
        tablePermissao.getColumnModel().getColumn(0).setPreferredWidth(30);
        tablePermissao.getColumnModel().getColumn(0).setMaxWidth(30);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 212, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelSuperButton, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSuperButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        createNew();
}//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        edit();
}//GEN-LAST:event_btnEditarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        salvar();
}//GEN-LAST:event_btnSalvarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        search();
}//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        close();
}//GEN-LAST:event_btnSairActionPerformed

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased
        MetodosUtil.defineSizeMax(50, txtNome);
    }//GEN-LAST:event_txtNomeKeyReleased

    private void txtDescricaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescricaoKeyReleased
        MetodosUtil.defineSizeMax(100, txtDescricao);
    }//GEN-LAST:event_txtDescricaoKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelSuperButton;
    private javax.swing.JTable tablePermissao;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables

    @Override
    public void createNew() {
        perfil = null;
        clear();
        disableTela(true);
        btnEditar.setEnabled(false);
        btnSalvar.setEnabled(true);
        txtNome.requestFocus();
    }

    @Override
    public void edit() {
        disableTela(ControleAcesso.ATIVA_BTN_CADASTRAR_PERFIL);
        btnEditar.setEnabled(false);
        btnSalvar.setEnabled(ControleAcesso.ATIVA_BTN_CADASTRAR_PERFIL);
    }

    @Override
    public void search() {
        FormConsultaPerfil form = new FormConsultaPerfil(true, this);
        form.setVisible(true);
    }

    @Override
    public void print() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public boolean validarTela() {
        StringBuilder stringError = new StringBuilder();
        if (txtNome.getText().trim().isEmpty()) {
            stringError.append(MessagePerfil.CAMPO_NOME_OBRIGATORIO);
        }
        if (txtDescricao.getText().trim().isEmpty()) {
            if (!stringError.toString().isEmpty()) {
                stringError.append("\n");
            }
            stringError.append(MessagePerfil.CAMPO_DESCRICAO_OBRIGATORIO);
        }

        if (!stringError.toString().isEmpty()) {
            JOptionPane.showMessageDialog(this, stringError, MensagensUtil.ATENCAO, 2);
        }

        return stringError.toString().isEmpty();

    }

    @Override
    public void pushToModel() {
        if (perfil == null) {
            perfil = new Perfil();
        }

        perfil.setNomePerfil(txtNome.getText().trim());
        perfil.setDescricao(txtDescricao.getText().trim());
    }

    @Override
    public void popularTela() {

        clear();
        txtNome.setText(perfil.getNomePerfil());
        txtDescricao.setText(perfil.getDescricao());
        atualizePermissoes(perfil);
    }

    @Override
    public void salvar() {
        try {
            if (validarTela()) {
                pushToModel();
                mantemPerfil(perfil, pushToModelPermissoes());                
            }
        } catch (Exception ex) {
            Logger.getLogger(FormPerfil.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, MessagePerfil.ERRO_SALVAR_PERFIL, MensagensUtil.ERRO, 0);
        }

    }

    @Override
    public void close() {
        if (!btnSalvar.isEnabled()) {
            fecharForm();
        } else {
            int opcao = JOptionPane.showOptionDialog(rootPane, MensagensUtil.MENSAGEM_CONFIRMAR_SAIR, MensagensUtil.ATENCAO,  
                JOptionPane.YES_NO_OPTION,  
                JOptionPane.QUESTION_MESSAGE, null, new String[]{"Sim", "N√£o"}, "N√£o"); 
            if (opcao == JOptionPane.YES_OPTION) {
                fecharForm();
            }
        }
    }

    private void fecharForm() {
        clear();
        this.dispose();
    }

    @Override
    public void initialize() {
        createNew();

        //pular de campo com enter
        MetodosUtil.enterPularCampos(this);
        //define letras maiusculas
        MetodosUtil.letrasMaiusculas(this.getContentPane()); 

        //Logica para fechar tela pela botao do frame
        addListenerParaExibirMgsFecharTela();

        //Inicializa Acesso
        this.inicializaAcessoPorPerfil();
    }

    @Override
    public void clear() {
        txtNome.setText(null);
        txtDescricao.setText(null);
        limpaGridPermissoes();
    }

    private void disableTela(boolean value) {
        txtNome.setEnabled(value);
        txtDescricao.setEnabled(value);
        tablePermissao.setEnabled(value);
    }

    /**
     * Faz chamada ao server para salvar perfil
     * @param perfil
     * @return 
     */
    private void mantemPerfil(Perfil perfil, List<AssociaPerfilPermissao> lstPermissoes) {        
        SwingWorkerPerfil<Perfil> work = new SwingWorkerPerfil<Perfil>(perfil);
        work.setFormPerfil(this);
        work.setLstPermissoes(lstPermissoes);
        work.workSalvaPerfil.execute();
    }
    
    public void salvarComSucesso() {
        JOptionPane.showMessageDialog(rootPane, MensagensUtil.MENSAGEM_SUCESSO_CADASTRO, MensagensUtil.SUCESSO, 1);
        disableTela(false);
        btnEditar.setEnabled(true);
        btnSalvar.setEnabled(false);
    }

    /**
     * Logica para quando o usuario clicar no botao fechar do frame
     * exibir a tela de confirma√ß√£o
     */
    private void addListenerParaExibirMgsFecharTela() {
        //cancela acao do botao fechar
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

        //add windowsListener sobrescrevendo o metodo windowClosing
        addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                if (e.getID() == WindowEvent.WINDOW_CLOSING) {
                    close();
                }
            }
        });
    }

    /**
     * Seta todas permiss√µes em banco e as inseri na grid
     */
    public void setTodasPermissoes(List<Permissao> listTodasPermissoes) {
        this.listTodasPermissoes = listTodasPermissoes;
        popularGrid(this.listTodasPermissoes);
    }

    /**
     * Inseri na grid a lista de permiss√µes
     * @param list 
     */
    private void popularGrid(List<Permissao> list) {
        for (Permissao permissao : list) {
            popularPermissao(permissao);
        }
    }

    /**
     * Popula os dados da permiss√£o na grid
     * @param permissao 
     */
    private void popularPermissao(Permissao permissao) {
        DefaultTableModel dtm = (DefaultTableModel) tablePermissao.getModel();

        dtm.addRow(new Object[]{
                    false,
                    permissao.getDescricao()
                });
    }

    /**
     * Recupera as permiss√µes selecionadas
     * @return 
     */
    private List<AssociaPerfilPermissao> pushToModelPermissoes() {
        List<AssociaPerfilPermissao> listRetorno = new ArrayList<AssociaPerfilPermissao>();
        DefaultTableModel dtm = (DefaultTableModel) tablePermissao.getModel();
        int cont = dtm.getRowCount();

        for (int i = 0; i < cont; i++) {
            AssociaPerfilPermissao associa = buscarAssociacaoPerfilPermissao(perfil, listTodasPermissoes.get(i));
            if (associa == null) {
                associa = new AssociaPerfilPermissao();
                AssociaPerfilPermissaoFK associaPerfilPermissaoFK = new AssociaPerfilPermissaoFK();
                associaPerfilPermissaoFK.setPerfil(perfil);
                associaPerfilPermissaoFK.setPermissao(listTodasPermissoes.get(i));
                associa.setChaveComposta(associaPerfilPermissaoFK);
            }
            associa.setStatus((Boolean) dtm.getValueAt(i, 0));
            
            listRetorno.add(associa);

        }
        return listRetorno;
    }

    /**
     * Populando as permiss√µes do perfil na grid
     * @param list 
     */
    private void atualizePermissaoPerfil(List<AssociaPerfilPermissao> list) {
        for (AssociaPerfilPermissao associaPerfilPermissao : list) {
            if (associaPerfilPermissao.isStatus()) {
                atualizePermissoesPerfil(associaPerfilPermissao.getChaveComposta().getPermissao());
            }
        }
    }

    /**
     * Marca na grid a permiss√£o passada
     * @param listPermissoesPerfil 
     */
    private void atualizePermissoesPerfil(Permissao perm) {
        DefaultTableModel dtm = (DefaultTableModel) tablePermissao.getModel();

        int i = 0;
        for (Permissao permissao : listTodasPermissoes) {
            if (perm.getId().equals(permissao.getId())) {
                dtm.setValueAt(true, i, 0);
                break;
            }
            i++;
        }
    }

    /**
     * Recupera as permissoes do perfil e atualiza a grid de permissoes
     * @param perfil 
     */
    private void atualizePermissoes(Perfil perfil) {
        try {
            PerfilServerImpl serverImpl = new PerfilServerImpl();
            this.listAssociaPerfilPermissao = serverImpl.recPermissoesPorPerfil(perfil);
            atualizePermissaoPerfil(this.listAssociaPerfilPermissao);
        } catch (Exception ex) {
            Logger.getLogger(FormPerfil.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpaGridPermissoes() {
        DefaultTableModel dtm = (DefaultTableModel) tablePermissao.getModel();
        int x = dtm.getRowCount();
        for (int a = 0; a < x; a++) {
            dtm.setValueAt(false, a, 0);
        }
    }

    private AssociaPerfilPermissao buscarAssociacaoPerfilPermissao(Perfil perfil, Permissao permissao) {
        if (this.listAssociaPerfilPermissao != null
                && this.listAssociaPerfilPermissao.size() > 0) {
            for (AssociaPerfilPermissao associa : listAssociaPerfilPermissao) {
                if (associa.getChaveComposta().getPerfil().getId().equals(perfil.getId())
                        && associa.getChaveComposta().getPermissao().getId().equals(permissao.getId())) {
                    return associa;
                }
            }
        }

        return null;
    }

    @Override
    public void inicializaAcessoPorPerfil() {
        //this.btnEditar.setEnabled(ControleAcesso.ATIVA_BTN_CADASTRAR_PERFIL);
        if(!ControleAcesso.ATIVA_BTN_CADASTRAR_PERFIL)
            disableTela(false);
        this.btnNovo.setEnabled(ControleAcesso.ATIVA_BTN_CADASTRAR_PERFIL);
        this.btnSalvar.setEnabled(ControleAcesso.ATIVA_BTN_CADASTRAR_PERFIL);
        this.btnPesquisar.setEnabled(ControleAcesso.ATIVA_BTN_CONSULTAR_PERFIL);
    }

    @Override
    public void showFrame() {    
        setLocationRelativeTo(null);
        setExtendedState(NORMAL);
        initialize();
        this.setVisible(true);
    }
}
