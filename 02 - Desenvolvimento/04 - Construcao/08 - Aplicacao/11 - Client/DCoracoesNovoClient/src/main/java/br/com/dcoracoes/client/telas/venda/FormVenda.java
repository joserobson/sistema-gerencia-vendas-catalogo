/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormVenda.java
 *
 * Created on 24/05/2012, 00:16:20
 */
package br.com.dcoracoes.client.telas.venda;

import br.com.dcoracoes.client.ControleAcesso;
import br.com.dcoracoes.client.Excecao.ClientDCoracoesException;
import br.com.dcoracoes.client.classes.serverimpl.PedidoServerImpl;
import br.com.dcoracoes.client.enuns.*;
import br.com.dcoracoes.client.enuns.Enum_Forma_Pagamento;
import br.com.dcoracoes.client.enuns.Enum_UF;
import br.com.dcoracoes.client.interfaces.InterfaceCadastroCompleto;
import br.com.dcoracoes.client.relatorios.GerarRelatorio;
import br.com.dcoracoes.client.swingworker.SwingWorkerPedidoVenda;
import br.com.dcoracoes.client.telas.principal.FormPrincipal;
import br.com.dcoracoes.client.telas.produto.FormConsultaProduto;
import br.com.dcoracoes.client.telas.produto.FormProduto;
import br.com.dcoracoes.client.util.LogUtil;
import br.com.dcoracoes.client.util.MensagensUtil;
import br.com.dcoracoes.client.util.MetodosUtil;
import br.com.dcoracoes.client.util.componentes.ComboBoxEstado;
import br.com.dcoracoes.client.util.message.MessageCompra;
import br.com.dcoracoes.client.util.message.MessageRelatorio;
import br.com.dcoracoes.client.util.message.MessageVenda;
import br.com.dcoracoes.client.util.message.OperadorasTelefonicas;
import br.com.dcoracoes.servico.service.*;
import br.com.wedesenv.common.date.DateUtil;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.lang.Exception;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.xml.datatype.XMLGregorianCalendar;
import net.sf.jasperreports.engine.JRException;

/**
 *
 * @author Cléberson
 */
public class FormVenda extends javax.swing.JFrame implements InterfaceCadastroCompleto {

    private FormPrincipal form = null;
    private PedidoVenda pedido;
    private HashMap<Integer, Produto> lstProduto;
    private HashMap<Integer, ItemProduto> lstItemProduto;
    private FormConsultaProduto formProduto;

    public PedidoVenda getPedido() {
        return pedido;
    }

    public void setPedido(PedidoVenda pedido) {
        this.pedido = pedido;
        popularTela();

        btnImprimirCompleto.setEnabled(true);
        btnImprimirExpedicao.setEnabled(true);

        edit();
    }
    private Revendedor revendedor;

    /**
     * Creates new form FormVenda
     */
    public FormVenda(FormPrincipal form) {
        this.form = form;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        panelBase = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jtxtLimiteUtilizavel = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jtxtLimiteUso = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        jtxtLimiteCredito = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jtxtValorPedidoEscrito = new javax.swing.JFormattedTextField();
        jLabel20 = new javax.swing.JLabel();
        txtAprovacao = new javax.swing.JFormattedTextField();
        cbFormaPagamento = new javax.swing.JComboBox();
        lblAlertaProspeccao = new javax.swing.JLabel();
        btnProspeccoes = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtCodigoRevendedor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtCodigoConfiscal = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jtxtNotaFiscal = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jtxtDataCadastro = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxtUltimaCompra = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSituacao = new javax.swing.JFormattedTextField();
        tablePanelDados = new javax.swing.JTabbedPane();
        panelDadosPrincipais = new javax.swing.JPanel();
        lblConsultor = new javax.swing.JLabel();
        lblEndereco = new javax.swing.JLabel();
        lblNumero = new javax.swing.JLabel();
        lblComplemento = new javax.swing.JLabel();
        lblCidade = new javax.swing.JLabel();
        lbUF = new javax.swing.JLabel();
        lblCEP = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        lblRG = new javax.swing.JLabel();
        lblDataNascimento = new javax.swing.JLabel();
        lblEstadoCivil = new javax.swing.JLabel();
        txtRevendedor = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        txtComplemento = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        jtxtCEP = new javax.swing.JFormattedTextField();
        jtxtCPF = new javax.swing.JFormattedTextField();
        jtxtRG = new javax.swing.JFormattedTextField();
        jtxtDataNascimento = new javax.swing.JFormattedTextField();
        cbEstadoCivil = new javax.swing.JComboBox();
        cbUF = new ComboBoxEstado();
        panelContato = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jtxtTelefoneResidencial = new javax.swing.JFormattedTextField();
        jtxtCelular1 = new javax.swing.JFormattedTextField();
        jtxtTelefoneComercial = new javax.swing.JFormattedTextField();
        jtxtCelular2 = new javax.swing.JFormattedTextField();
        jtxtEmail1 = new javax.swing.JFormattedTextField();
        jtxtEmail2 = new javax.swing.JFormattedTextField();
        cbOperadora1 = new javax.swing.JComboBox();
        cbOperadora2 = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        btnSalvarPDF = new javax.swing.JButton();
        btnImprimirExpedicao = new javax.swing.JButton();
        btnImprimirCompleto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableItemVenda = new JTable();
        jLabel30 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jtxtSubTotal = new javax.swing.JTextField();
        jtxtValorDesconto = new javax.swing.JTextField();
        jtxtTotal = new javax.swing.JTextField();
        btnRemoverItem = new javax.swing.JButton();
        btnNovoItem = new javax.swing.JButton();
        txtTotalItems = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        panelSuperButton = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnExcluir = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        btnPesquisar = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtNumeroOrcamento = new javax.swing.JFormattedTextField();
        jtxtData = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Venda");
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage("src/main/resources/imagens/outras/icon_SGC.gif"));
        setResizable(false);

        panelBase.setPreferredSize(new java.awt.Dimension(500, 653));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("<html>\n<center>\nLIMITE<br/>UTILIZÁVEL\n</center>\n</html>");

        jtxtLimiteUtilizavel.setEditable(false);
        jtxtLimiteUtilizavel.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtxtLimiteUtilizavel.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("<html> <center> LIMITE<br/>EM USO </center> </html>");

        jtxtLimiteUso.setEditable(false);
        jtxtLimiteUso.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtxtLimiteUso.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("<html>\n<center>\nLIMITE<br/>DE CRÉDITO\n</center>\n</html>");

        jtxtLimiteCredito.setEditable(false);
        jtxtLimiteCredito.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtxtLimiteCredito.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtLimiteCredito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtLimiteCreditoKeyReleased(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("<html> <center> FORMA DE<br/>PAGAMENTO</center> </html>");

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("<html> <center> VALOR DO<br/>PEDIDO ESCRITO</center> </html>");

        jtxtValorPedidoEscrito.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtxtValorPedidoEscrito.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtValorPedidoEscrito.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtValorPedidoEscritoFocusLost(evt);
            }
        });
        jtxtValorPedidoEscrito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtValorPedidoEscritoKeyReleased(evt);
            }
        });

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("<html> <center> APROVAÇÃO<br/>DE VENDA</center> </html>");

        txtAprovacao.setEditable(false);
        txtAprovacao.setForeground(java.awt.Color.red);
        txtAprovacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAprovacao.setFont(new java.awt.Font("Tahoma", 1, 11));
        txtAprovacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAprovacaoKeyReleased(evt);
            }
        });

        cbFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFormaPagamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbFormaPagamento, 0, 109, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxtValorPedidoEscrito)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jtxtLimiteCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8)
                    .addComponent(jtxtLimiteUso, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9)
                    .addComponent(jtxtLimiteUtilizavel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20)
                    .addComponent(txtAprovacao, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jPanel11Layout.createSequentialGroup()
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(txtAprovacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtLimiteUtilizavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxtLimiteUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxtLimiteCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtValorPedidoEscrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        cbFormaPagamento.addItem(Enum_Forma_Pagamento.AVISTA.getFormaPagamento());
        cbFormaPagamento.addItem(Enum_Forma_Pagamento.APRAZO.getFormaPagamento());
        cbFormaPagamento.addItem(Enum_Forma_Pagamento.APRAZOCOMCOMPLEMENTO.getFormaPagamento());

        cbFormaPagamento.setSelectedIndex(0);

        lblAlertaProspeccao.setFont(new java.awt.Font("Tahoma", 1, 14));
        lblAlertaProspeccao.setForeground(new java.awt.Color(255, 0, 0));
        lblAlertaProspeccao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAlertaProspeccao.setText("<html> <center> ALERTA  DE <br/> PROSPECÇÃO </center> <html>");

        btnProspeccoes.setFont(new java.awt.Font("Tahoma", 1, 10));
        btnProspeccoes.setText("PROSPECÇÕES");
        btnProspeccoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProspeccoesActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<html> <center> CÓDIGO<br/>REVENDEDOR(A) </center> </html>");

        jtxtCodigoRevendedor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtCodigoRevendedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtCodigoRevendedorFocusLost(evt);
            }
        });
        jtxtCodigoRevendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtCodigoRevendedorKeyReleased(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("<html>\n<center>\nCÓDIGO<br/>CONFISCAL\n</center>\n</html>");

        jtxtCodigoConfiscal.setEditable(false);
        jtxtCodigoConfiscal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtCodigoConfiscal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtCodigoConfiscalKeyReleased(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("<html> <center> NOTA<br/>FISCAL </center> </html>");

        jtxtNotaFiscal.setEditable(false);
        jtxtNotaFiscal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtNotaFiscal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtNotaFiscalKeyReleased(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("<html>\n<center>\nDATA DE<br/>CADASTRO\n</center>\n</html>");

        jtxtDataCadastro.setEditable(false);
        jtxtDataCadastro.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("<html>\n<center>\nÚLTIMA<br/>COMPRA\n</center>\n</html>");

        jtxtUltimaCompra.setEditable(false);
        jtxtUltimaCompra.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SITUAÇÃO");

        txtSituacao.setEditable(false);
        txtSituacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxtCodigoRevendedor)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jtxtCodigoConfiscal, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jtxtNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxtDataCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(jtxtUltimaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSituacao, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addGap(14, 14, 14)
                                    .addComponent(jLabel6)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jtxtUltimaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxtDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxtNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jtxtCodigoRevendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxtCodigoConfiscal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablePanelDados.setToolTipText("");

        panelDadosPrincipais.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelDadosPrincipais.setEnabled(false);

        lblConsultor.setText("REVENDEDOR(A):");

        lblEndereco.setText("ENDEREÇO:");

        lblNumero.setText("Nº:");

        lblComplemento.setText("COMPLEMENTO:");

        lblCidade.setText("CIDADE:");

        lbUF.setText("UF:");

        lblCEP.setText("CEP:");

        lblCPF.setText("CPF:");

        lblRG.setText("RG:");

        lblDataNascimento.setText("DATA DE NASCIMENTO:");

        lblEstadoCivil.setText("ESTADO CIVIL:");

        txtRevendedor.setEditable(false);
        txtRevendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRevendedorKeyReleased(evt);
            }
        });

        txtEndereco.setEditable(false);
        txtEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEnderecoKeyReleased(evt);
            }
        });

        txtNumero.setEditable(false);
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumeroKeyReleased(evt);
            }
        });

        txtComplemento.setEditable(false);
        txtComplemento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtComplementoKeyReleased(evt);
            }
        });

        txtCidade.setEditable(false);
        txtCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCidadeKeyReleased(evt);
            }
        });

        jtxtCEP.setEditable(false);
        jtxtCEP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtCEPKeyReleased(evt);
            }
        });

        jtxtCPF.setEditable(false);
        jtxtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtCPFKeyReleased(evt);
            }
        });

        jtxtRG.setEditable(false);
        jtxtRG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtRGKeyReleased(evt);
            }
        });

        jtxtDataNascimento.setEditable(false);

        cbEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Casado(a)", "Solteiro(a)", "Separado(a)", "Divorciado(a)", "União Estável" }));
        cbEstadoCivil.setSelectedIndex(1);
        cbEstadoCivil.setEnabled(false);

        cbUF.setEnabled(false);

        javax.swing.GroupLayout panelDadosPrincipaisLayout = new javax.swing.GroupLayout(panelDadosPrincipais);
        panelDadosPrincipais.setLayout(panelDadosPrincipaisLayout);
        panelDadosPrincipaisLayout.setHorizontalGroup(
            panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addComponent(lblConsultor)
                        .addGap(4, 4, 4)
                        .addComponent(txtRevendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE))
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addComponent(lblCPF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(lblRG)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtRG, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(lblDataNascimento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addComponent(lblEstadoCivil)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                                .addComponent(lblEndereco)
                                .addGap(4, 4, 4)
                                .addComponent(txtEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                                .addGap(27, 27, 27)
                                .addComponent(lblNumero)
                                .addGap(5, 5, 5)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                                .addComponent(lblCidade)
                                .addGap(4, 4, 4)
                                .addComponent(txtCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                .addGap(57, 57, 57)
                                .addComponent(lbUF)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbUF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)
                        .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                                .addComponent(lblCEP)
                                .addGap(4, 4, 4)
                                .addComponent(jtxtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                                .addComponent(lblComplemento)
                                .addGap(4, 4, 4)
                                .addComponent(txtComplemento, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))))
                .addGap(163, 163, 163))
        );
        panelDadosPrincipaisLayout.setVerticalGroup(
            panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblConsultor))
                    .addComponent(txtRevendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblEndereco))
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblNumero))
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblComplemento))
                    .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblCidade))
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelDadosPrincipaisLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblCEP))
                            .addComponent(jtxtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbUF)
                                .addComponent(cbUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(11, 11, 11)
                .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCPF)
                        .addComponent(jtxtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtxtRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblRG)
                        .addComponent(lblDataNascimento)
                        .addComponent(jtxtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(panelDadosPrincipaisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstadoCivil))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        tablePanelDados.addTab("Dados Principais", panelDadosPrincipais);

        panelContato.setEnabled(false);

        jLabel11.setText("TELEFONE RESIDÊNCIAL:");

        jLabel12.setText("CELULAR 1:");

        jLabel13.setText("OPERADORA:");

        jLabel14.setText("TELEFONE COMERCIAL:");

        jLabel15.setText("CELULAR 2:");

        jLabel16.setText("OPERADORA:");

        jLabel17.setText("EMAIL 1:");

        jLabel18.setText("EMAIL 2:");

        jtxtTelefoneResidencial.setEditable(false);

        jtxtCelular1.setEditable(false);

        jtxtTelefoneComercial.setEditable(false);

        jtxtCelular2.setEditable(false);

        jtxtEmail1.setEditable(false);
        jtxtEmail1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtEmail1KeyReleased(evt);
            }
        });

        jtxtEmail2.setEditable(false);
        jtxtEmail2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtEmail2KeyReleased(evt);
            }
        });

        cbOperadora1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VIVO", "TIM", "CLARO", "OI" }));
        cbOperadora1.setEnabled(false);

        cbOperadora2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VIVO", "TIM", "CLARO", "OI" }));
        cbOperadora2.setEnabled(false);

        javax.swing.GroupLayout panelContatoLayout = new javax.swing.GroupLayout(panelContato);
        panelContato.setLayout(panelContatoLayout);
        panelContatoLayout.setHorizontalGroup(
            panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContatoLayout.createSequentialGroup()
                        .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelContatoLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtTelefoneResidencial, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelContatoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtTelefoneComercial, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelContatoLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(panelContatoLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtxtCelular2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(jtxtCelular1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbOperadora2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbOperadora1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelContatoLayout.createSequentialGroup()
                            .addComponent(jLabel18)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxtEmail2))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelContatoLayout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtxtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        panelContatoLayout.setVerticalGroup(
            panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContatoLayout.createSequentialGroup()
                        .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jtxtTelefoneResidencial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtTelefoneComercial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)))
                    .addGroup(panelContatoLayout.createSequentialGroup()
                        .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jtxtCelular1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(cbOperadora1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtCelular2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(cbOperadora2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jtxtEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jtxtEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        tablePanelDados.addTab("Contato", panelContato);

        javax.swing.GroupLayout panelBaseLayout = new javax.swing.GroupLayout(panelBase);
        panelBase.setLayout(panelBaseLayout);
        panelBaseLayout.setHorizontalGroup(
            panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBaseLayout.createSequentialGroup()
                .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelBaseLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tablePanelDados, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE))
                    .addGroup(panelBaseLayout.createSequentialGroup()
                        .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBaseLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelBaseLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAlertaProspeccao, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnProspeccoes, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        panelBaseLayout.setVerticalGroup(
            panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBaseLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(panelBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelBaseLayout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBaseLayout.createSequentialGroup()
                        .addComponent(lblAlertaProspeccao, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnProspeccoes, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(tablePanelDados, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );

        jTabbedPane.addTab("Dados do Revendedor", panelBase);

        btnSalvarPDF.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnSalvarPDF.setText("<html> <center>SALVAR<br/>PDF</center> <html>");
        btnSalvarPDF.setEnabled(false);

        btnImprimirExpedicao.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnImprimirExpedicao.setText("<html> <center>IMPRIMIR<br/>EXPEDIÇÃO</center> <html>");
        btnImprimirExpedicao.setEnabled(false);
        btnImprimirExpedicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirExpedicaoActionPerformed(evt);
            }
        });

        btnImprimirCompleto.setFont(new java.awt.Font("Tahoma", 1, 11));
        btnImprimirCompleto.setText("<html> <center>IMPRIMIR<br/>COMPLETO</center> <html>");
        btnImprimirCompleto.setEnabled(false);
        btnImprimirCompleto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirCompletoActionPerformed(evt);
            }
        });

        tableItemVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, "0"}
            },
            new String [] {
                "Ref. Catálogo", "Cor", "Quantidade", "Descrição", "Valor Unitário", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableItemVenda);
        tableItemVenda.getColumnModel().getColumn(0).setMinWidth(150);
        tableItemVenda.getColumnModel().getColumn(0).setPreferredWidth(150);
        tableItemVenda.getColumnModel().getColumn(0).setMaxWidth(150);
        tableItemVenda.getColumnModel().getColumn(1).setMinWidth(100);
        tableItemVenda.getColumnModel().getColumn(1).setPreferredWidth(100);
        tableItemVenda.getColumnModel().getColumn(1).setMaxWidth(100);
        tableItemVenda.getColumnModel().getColumn(2).setMinWidth(100);
        tableItemVenda.getColumnModel().getColumn(2).setPreferredWidth(100);
        tableItemVenda.getColumnModel().getColumn(2).setMaxWidth(100);
        tableItemVenda.getColumnModel().getColumn(4).setMinWidth(100);
        tableItemVenda.getColumnModel().getColumn(4).setPreferredWidth(100);
        tableItemVenda.getColumnModel().getColumn(4).setMaxWidth(100);
        tableItemVenda.getColumnModel().getColumn(5).setMinWidth(100);
        tableItemVenda.getColumnModel().getColumn(5).setPreferredWidth(100);
        tableItemVenda.getColumnModel().getColumn(5).setMaxWidth(100);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabel30.setText("TOTAL DE ITENS NO PEDIDO");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel31.setText("SUB-TOTAL");

        jLabel32.setText("DESCONTO 25%");

        jLabel33.setText("TOTAL");

        jtxtSubTotal.setEditable(false);

        jtxtValorDesconto.setEditable(false);

        jtxtTotal.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxtTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jtxtValorDesconto, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jtxtSubTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jtxtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jtxtValorDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jtxtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        btnRemoverItem.setText("Remover Item");
        btnRemoverItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverItemActionPerformed(evt);
            }
        });

        btnNovoItem.setText("Novo Item");
        btnNovoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoItemActionPerformed(evt);
            }
        });

        txtTotalItems.setEditable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel22.setText("ENCERRAR PEDIDO:");

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("ORÇAMENTO:");

        jLabel24.setText("ALTERAR CABEÇALHO:");

        jLabel25.setText("PROCUTA PRODUTO:");

        jLabel26.setText("F2");

        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("F3");

        jLabel28.setText("F4");

        jLabel29.setText("F5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(jLabel28)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 45, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 45, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 37, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnRemoverItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNovoItem))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtTotalItems, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel30))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnImprimirCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnImprimirExpedicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSalvarPDF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoItem)
                    .addComponent(btnRemoverItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, 0, 92, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtTotalItems)
                                .addComponent(jLabel30))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnImprimirCompleto)
                                    .addComponent(btnImprimirExpedicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSalvarPDF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Items do Pedido", jPanel3);

        panelSuperButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, new java.awt.Color(43, 115, 186)));

        btnNovo.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/document-new.png"))); // NOI18N
        btnNovo.setText("NOVO");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/sair32x32.png"))); // NOI18N
        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        jPanel5.setPreferredSize(new java.awt.Dimension(40, 60));
        jPanel5.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        jPanel7.setPreferredSize(new java.awt.Dimension(40, 60));
        jPanel7.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 39, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/img_deletar_32x32.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jPanel12.setPreferredSize(new java.awt.Dimension(40, 60));
        jPanel12.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        btnSalvar.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/img_salvar_32x32.png"))); // NOI18N
        btnSalvar.setText("SALVAR");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jPanel13.setPreferredSize(new java.awt.Dimension(40, 60));
        jPanel13.setVerifyInputWhenFocusTarget(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 41, Short.MAX_VALUE)
        );

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 1, 14));
        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/system-search.png"))); // NOI18N
        btnPesquisar.setText("PESQUISAR");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSuperButtonLayout = new javax.swing.GroupLayout(panelSuperButton);
        panelSuperButton.setLayout(panelSuperButtonLayout);
        panelSuperButtonLayout.setHorizontalGroup(
            panelSuperButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelSuperButtonLayout.setVerticalGroup(
            panelSuperButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSuperButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSuperButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btnSair, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNovo))
                .addContainerGap())
        );

        jLabel34.setText("Nº ORÇAMENTO:");

        jLabel35.setText("DATA:");

        txtNumeroOrcamento.setEditable(false);
        txtNumeroOrcamento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumeroOrcamento.setFont(new java.awt.Font("Tahoma", 1, 11));
        txtNumeroOrcamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumeroOrcamentoKeyReleased(evt);
            }
        });

        jtxtData.setEditable(false);
        jtxtData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        jtxtData.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtData.setFont(new java.awt.Font("Tahoma", 1, 11));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 897, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumeroOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtData, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelSuperButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelSuperButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(txtNumeroOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtCodigoRevendedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCodigoRevendedorKeyReleased
        MetodosUtil.defineSizeMax(6, jtxtCodigoRevendedor);
        MetodosUtil.validNumeric(jtxtCodigoRevendedor);
}//GEN-LAST:event_jtxtCodigoRevendedorKeyReleased

    private void jtxtCodigoConfiscalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCodigoConfiscalKeyReleased
        MetodosUtil.validNumeric(jtxtCodigoConfiscal);
        MetodosUtil.defineSizeMax(20, jtxtCodigoConfiscal);
}//GEN-LAST:event_jtxtCodigoConfiscalKeyReleased

    private void jtxtNotaFiscalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtNotaFiscalKeyReleased
        MetodosUtil.validNumeric(jtxtNotaFiscal);
        MetodosUtil.defineSizeMax(50, jtxtNotaFiscal);
}//GEN-LAST:event_jtxtNotaFiscalKeyReleased

    private void jtxtLimiteCreditoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtLimiteCreditoKeyReleased
        MetodosUtil.defineSizeMax(20, jtxtLimiteCredito);
}//GEN-LAST:event_jtxtLimiteCreditoKeyReleased

    private void jtxtValorPedidoEscritoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtValorPedidoEscritoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtValorPedidoEscritoKeyReleased

    private void txtAprovacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAprovacaoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAprovacaoKeyReleased

    private void btnProspeccoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProspeccoesActionPerformed
        // TODO add your handling code here:        
//ROBSON
//        FormProspeccoes form = new FormProspeccoes(revendedor, true, this);
//        form.setVisible(true);
}//GEN-LAST:event_btnProspeccoesActionPerformed

    private void btnRemoverItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverItemActionPerformed
        // TODO add your handling code here:
        removeCor();
}//GEN-LAST:event_btnRemoverItemActionPerformed

    private void btnNovoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoItemActionPerformed
        popularGrid(new ItemPedido());
    }//GEN-LAST:event_btnNovoItemActionPerformed

    private void jtxtCodigoRevendedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtCodigoRevendedorFocusLost
        try {
            searchRevendedor();
            aprovarVenda();
        } catch (java.lang.Exception ex) {
        }
    }//GEN-LAST:event_jtxtCodigoRevendedorFocusLost

    private void jtxtValorPedidoEscritoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtValorPedidoEscritoFocusLost
        aprovarVenda();
    }//GEN-LAST:event_jtxtValorPedidoEscritoFocusLost

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        createNew();
}//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        salvar();
}//GEN-LAST:event_btnSalvarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        close();
}//GEN-LAST:event_btnSairActionPerformed

    private void jtxtEmail2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtEmail2KeyReleased
        MetodosUtil.defineSizeMax(50, jtxtEmail2);
}//GEN-LAST:event_jtxtEmail2KeyReleased

    private void jtxtEmail1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtEmail1KeyReleased
        MetodosUtil.defineSizeMax(50, jtxtEmail1);
}//GEN-LAST:event_jtxtEmail1KeyReleased

    private void jtxtRGKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtRGKeyReleased
        MetodosUtil.defineSizeMax(50, jtxtRG);
}//GEN-LAST:event_jtxtRGKeyReleased

    private void jtxtCPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCPFKeyReleased
        MetodosUtil.defineSizeMax(20, jtxtCPF);
}//GEN-LAST:event_jtxtCPFKeyReleased

    private void jtxtCEPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCEPKeyReleased
        MetodosUtil.defineSizeMax(20, jtxtCEP);
}//GEN-LAST:event_jtxtCEPKeyReleased

    private void txtCidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCidadeKeyReleased
        MetodosUtil.defineSizeMax(150, txtCidade);
}//GEN-LAST:event_txtCidadeKeyReleased

    private void txtComplementoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComplementoKeyReleased
        MetodosUtil.defineSizeMax(50, txtComplemento);
}//GEN-LAST:event_txtComplementoKeyReleased

    private void txtNumeroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyReleased
        MetodosUtil.defineSizeMax(10, txtNumero);
}//GEN-LAST:event_txtNumeroKeyReleased

    private void txtEnderecoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnderecoKeyReleased
        MetodosUtil.defineSizeMax(150, txtEndereco);
}//GEN-LAST:event_txtEnderecoKeyReleased

    private void txtRevendedorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRevendedorKeyReleased
        MetodosUtil.defineSizeMax(150, txtRevendedor);
}//GEN-LAST:event_txtRevendedorKeyReleased

    private void txtNumeroOrcamentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroOrcamentoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroOrcamentoKeyReleased

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void cbFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFormaPagamentoActionPerformed
        // TODO add your handling code here:
        aprovarVenda();
    }//GEN-LAST:event_cbFormaPagamentoActionPerformed

    private void btnImprimirCompletoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirCompletoActionPerformed
    //ROBSON
        try {
            GerarRelatorio gerar = new GerarRelatorio();
            gerar.gerarRelatorioCompletoVenda(pedido);

        } catch (JRException ex) {
            LogUtil.logDescricaoErro(this.getClass(), ex);
            JOptionPane.showMessageDialog(this, MessageRelatorio.MENSAGEM_ERRO_RELATORIO_COMPLETO_VENDA, MensagensUtil.ATENCAO, 1);
        }
    }//GEN-LAST:event_btnImprimirCompletoActionPerformed

    private void btnImprimirExpedicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirExpedicaoActionPerformed
    //ROBSON
        try {
            GerarRelatorio gerar = new GerarRelatorio();
            gerar.gerarRelatorioExpedicaoVenda(pedido);

        } catch (JRException ex) {
            LogUtil.logDescricaoErro(this.getClass(), ex);
            JOptionPane.showMessageDialog(this, MessageRelatorio.MENSAGEM_ERRO_RELATORIO_EXPEDICAO_VENDA, MensagensUtil.ATENCAO, 1);
        }
    }//GEN-LAST:event_btnImprimirExpedicaoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnExcluirActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnImprimirCompleto;
    private javax.swing.JButton btnImprimirExpedicao;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnNovoItem;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnProspeccoes;
    private javax.swing.JButton btnRemoverItem;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvarPDF;
    private javax.swing.JComboBox cbEstadoCivil;
    private javax.swing.JComboBox cbFormaPagamento;
    private javax.swing.JComboBox cbOperadora1;
    private javax.swing.JComboBox cbOperadora2;
    private javax.swing.JComboBox cbUF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JFormattedTextField jtxtCEP;
    private javax.swing.JFormattedTextField jtxtCPF;
    private javax.swing.JFormattedTextField jtxtCelular1;
    private javax.swing.JFormattedTextField jtxtCelular2;
    private javax.swing.JFormattedTextField jtxtCodigoConfiscal;
    private javax.swing.JTextField jtxtCodigoRevendedor;
    private javax.swing.JFormattedTextField jtxtData;
    private javax.swing.JFormattedTextField jtxtDataCadastro;
    private javax.swing.JFormattedTextField jtxtDataNascimento;
    private javax.swing.JFormattedTextField jtxtEmail1;
    private javax.swing.JFormattedTextField jtxtEmail2;
    private javax.swing.JFormattedTextField jtxtLimiteCredito;
    private javax.swing.JFormattedTextField jtxtLimiteUso;
    private javax.swing.JFormattedTextField jtxtLimiteUtilizavel;
    private javax.swing.JFormattedTextField jtxtNotaFiscal;
    private javax.swing.JFormattedTextField jtxtRG;
    private javax.swing.JTextField jtxtSubTotal;
    private javax.swing.JFormattedTextField jtxtTelefoneComercial;
    private javax.swing.JFormattedTextField jtxtTelefoneResidencial;
    private javax.swing.JTextField jtxtTotal;
    private javax.swing.JFormattedTextField jtxtUltimaCompra;
    private javax.swing.JTextField jtxtValorDesconto;
    private javax.swing.JFormattedTextField jtxtValorPedidoEscrito;
    private javax.swing.JLabel lbUF;
    private javax.swing.JLabel lblAlertaProspeccao;
    private javax.swing.JLabel lblCEP;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblConsultor;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEstadoCivil;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblRG;
    private javax.swing.JPanel panelBase;
    private javax.swing.JPanel panelContato;
    private javax.swing.JPanel panelDadosPrincipais;
    private javax.swing.JPanel panelSuperButton;
    private javax.swing.JTable tableItemVenda;
    private javax.swing.JTabbedPane tablePanelDados;
    private javax.swing.JFormattedTextField txtAprovacao;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JFormattedTextField txtNumeroOrcamento;
    private javax.swing.JTextField txtRevendedor;
    private javax.swing.JFormattedTextField txtSituacao;
    private javax.swing.JTextField txtTotalItems;
    // End of variables declaration//GEN-END:variables

    @Override
    public void createNew() {
        revendedor = null;
        btnExcluir.setEnabled(false);
        disableTela(true);
        disableAbaItemsPedido(false);
        clear();
        gerarNumeroOrcamento();
        populaDataCadastro();


        btnImprimirCompleto.setEnabled(false);
        btnImprimirExpedicao.setEnabled(false);
//        btnSalvarPDF.setEnabled(false);

        //exibi aba principal
        jTabbedPane.setSelectedIndex(0);
        jtxtCodigoRevendedor.requestFocus();
    }

    @Override
    public void edit() {
        disableTela(false);
        disableAbaItemsPedido(false);
    }

    @Override
    public void search() {
        FormConsultaVenda form = new FormConsultaVenda(true, this);
        form.setVisible(true);
    }

    /**
     * busca revendedor pelo codigo informado
     */
    private void searchRevendedor() {
        Revendedor rev = new Revendedor();
        rev.setCodigo(Integer.parseInt(jtxtCodigoRevendedor.getText()));

        SwingWorkerPedidoVenda work = new SwingWorkerPedidoVenda();
        work.setRevendedor(rev);
        work.workBuscaRevendedor.execute();
    }

    /**
     * set revendedor na tela
     *
     * @param listViewRevendedor
     */
    public void setRevendedor(List<ViewRevendedor> listViewRevendedor) {
        if (listViewRevendedor.size() > 0) {
            popularRevendedor(listViewRevendedor.get(0).getRevendedor());
            cbFormaPagamento.requestFocus();
        } else {
            clearCamposRevendedor();
            JOptionPane.showMessageDialog(this, MensagensUtil.MENSAGEM_NENHUM_REGISTRO, MensagensUtil.ATENCAO, 1);
        }
    }

    @Override
    public void print() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public boolean validarTela() {
        StringBuilder stringError = new StringBuilder();
        if (jtxtCodigoRevendedor.getText().trim().isEmpty()) {
            stringError.append(MessageVenda.CAMPO_CODIGO_REVENDEDOR_OBRIGATORIO);
        }
        if (jtxtValorPedidoEscrito.getText().trim().isEmpty()) {
            if (!stringError.toString().isEmpty()) {
                stringError.append("\n");
            }
            stringError.append(MessageVenda.CAMPO_VALOR_PEDIDO_ESCRITO_OBRIGATORIO);
        }
        if (revendedor == null) {
            if (!stringError.toString().isEmpty()) {
                stringError.append("\n");
            }
            stringError.append(MessageVenda.CAMPO_REVENDEDOR_OBRIGATORIO);
        }

        //Validando item venda
        if (((DefaultTableModel) tableItemVenda.getModel()).getRowCount() > 0) {

            StringBuilder stringErroCor = validarItemVenda();
            if (!stringErroCor.toString().isEmpty()) {
                if (!stringError.toString().isEmpty()) {
                    stringError.append("\n");
                }
                stringError.append(stringErroCor);
            }
        } else {
            if (!stringError.toString().isEmpty()) {
                stringError.append("\n");
            }
            stringError.append(MessageVenda.CAMPO_ITEMS_PEDIDO_OBRIGATORIO);
        }

        if (!stringError.toString().isEmpty()) {
            JOptionPane.showMessageDialog(this, stringError, MensagensUtil.ATENCAO, 2);
        }

        return stringError.toString().isEmpty();
    }

    @Override
    public void pushToModel() {
        if (pedido == null) {
            pedido = new PedidoVenda();
        }

        if (!txtNumeroOrcamento.getText().isEmpty()) {
            pedido.setCodigo(txtNumeroOrcamento.getText().trim());
        } else {
            pedido.setCodigo(null);
        }

        if (!jtxtData.getText().isEmpty()) {
            pedido.setDataPedido(DateUtil.dateAsXMLGregorianCalendar((Date) jtxtData.getValue()));
        } else {
            pedido.setDataPedido(null);
        }

        if (!jtxtValorPedidoEscrito.getText().isEmpty()) {
            pedido.setValorPedidoEscrito(Float.parseFloat(jtxtValorPedidoEscrito.getText().trim().replace(".", "").replace(",", ".")));
        } else {
            pedido.setValorPedidoEscrito(-1);
        }

        pedido.setRevendedor(revendedor);

        pedido.setSubTotal(Float.parseFloat(jtxtSubTotal.getText().replace(".", "").replace(",", ".")));
        pedido.setTotal(Float.parseFloat(jtxtTotal.getText().replace(".", "").replace(",", ".")));
        pedido.setDescontoPorcentagem(Float.parseFloat(jtxtValorDesconto.getText().replace(".", "").replace(",", ".")));

        pedido.setPagamento(pushToModelFormaPagamento());

        pushToModelItemPedido();

    }

    /**
     * pushToModelFormaPagamento
     *
     * @return
     */
    private Pagamento pushToModelFormaPagamento() {
        Pagamento pagamento = pedido.getPagamento();
        if (pagamento == null) {
            pagamento = new Pagamento();
        }

        pagamento.setFormaPagamento((Enum_Forma_Pagamento.getType(cbFormaPagamento.getSelectedItem().toString())).getTipo());
        pagamento.setValor(pedido.getTotal());

        return pagamento;
    }

    @Override
    public void popularTela() {
        clear();

        txtNumeroOrcamento.setText(pedido.getCodigo());
        jtxtData.setValue(pedido.getDataPedido());
        cbFormaPagamento.setSelectedIndex(Enum_Forma_Pagamento.getByte(pedido.getPagamento().getFormaPagamento()));
        jtxtValorPedidoEscrito.setValue(pedido.getValorPedidoEscrito());

        atualizaTotais();

        jtxtSubTotal.setText(pedido.getSubTotal() + "");
        jtxtValorDesconto.setText(calcValorDesconto(pedido.getSubTotal()) + "");
        jtxtTotal.setText(pedido.getTotal() + "");

        popularRevendedor(pedido.getRevendedor());

        for (ItemPedido item : pedido.getListaItensPedido()) {
            popularGrid(item);
        }
    }

    @Override
    public void salvar() {
        try {
            if (validarTela()) {
                pushToModel();
                mantemPedido(pedido);
            }
        } catch (java.lang.Exception ex) {
            LogUtil.logDescricaoErro(this.getClass(), ex);
            JOptionPane.showMessageDialog(this, MessageVenda.ERRO_SALVAR_PEDIDO, MensagensUtil.ERRO, 0);
        }
    }

    public void salvarComSucesso() {
        popularTela();
        JOptionPane.showMessageDialog(this, MensagensUtil.MENSAGEM_SUCESSO_CADASTRO, MensagensUtil.SUCESSO, 1);
        disableAbaItemsPedido(false);
        disableAbaDadosRevendedor(false);
        btnSalvar.setEnabled(false);
        btnImprimirCompleto.setEnabled(true);
        btnImprimirExpedicao.setEnabled(true);
        btnExcluir.setEnabled(ControleAcesso.ATIVA_BTN_CADASTRAR_PEDIDO_VENDA);
    }

    @Override
    public void close() {
        if (!btnSalvar.isEnabled()) {
            fecharForm();
        } else {
            int opcao = JOptionPane.showOptionDialog(rootPane, MensagensUtil.MENSAGEM_CONFIRMAR_SAIR, MensagensUtil.ATENCAO,
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, new String[]{"Sim", "Não"}, "Não");
            if (opcao == JOptionPane.YES_OPTION) {
                fecharForm();
            }
        }
    }

    private void fecharForm() {
        clear();
        this.dispose();
        form.setFormVenda(null);
    }

    private void delete() {
        //ROBSON
        SwingWorkerPedidoVenda work = new SwingWorkerPedidoVenda();
        work.setPedido(pedido);
        work.setFormVenda(this);
        work.workRemoverPedido.execute();
    }

    public void afterDelete() {
        pedido = null;
        JOptionPane.showMessageDialog(this, MessageVenda.SUCESSO_REMOVER_Venda, MensagensUtil.SUCESSO, 1);
        createNew();
    }

    @Override
    public void initialize() {

        lblAlertaProspeccao.setVisible(false);
        //ocultando o botão Remover Item
        btnRemoverItem.setVisible(false);
        btnSalvarPDF.setVisible(false);

        //inicialiando os dados base
        createNew();
        initializeList();

        //evento de inserção de tados na grid de item
        tableItemVenda.getModel().addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent e) {
                boolean aux = false;
                /**
                 * trata eventos de codigo referencia catalogo
                 */
                int row = tableItemVenda.getSelectedRow();
                DefaultTableModel dtm = (DefaultTableModel) tableItemVenda.getModel();
                if (e.getColumn() == 0) {
                    String codigoProdutoCatalogo = dtm.getValueAt(row, 0).toString();
                    if (!codigoProdutoCatalogo.isEmpty()) {
                        buscarProduto(codigoProdutoCatalogo, row);
                        aux = true;
                    } else {
                        atualizaTableDadosProduto(new Produto(), row);
                        tableItemVenda.getModel().setValueAt(null, row, 1);
                        tableItemVenda.getModel().setValueAt(0, row, 2);
                    }
                } else {
                    /**
                     * trata evento de quantidade
                     */
                    if (e.getColumn() == 2) {
                        atualizaValorTotalItemProduto(row);

                        aux = true;
                    } else {
                        /**
                         * trata evento de cor
                         */
                        if (e.getColumn() == 1) {
                            aux = true;
                            try {
                                if (lstItemProduto != null) {
                                    String refCatalogo = dtm.getValueAt(row, 0).toString();
                                    String cor = dtm.getValueAt(row, 1).toString();

                                    if (validExistProdutoCor(refCatalogo, cor, row)) {
                                        tableItemVenda.getModel().setValueAt(null, row, 1);
                                        return;
                                    }
                                }
                            } catch (java.lang.Exception ex) {
                                LogUtil.logDescricaoErro(this.getClass(), ex);
                            }
                        }
                    }
                }

                /**
                 * atualiza total de acordo com os items da grid
                 */
                atualizaTotais();

                if (aux) {
                    if (dtm.getValueAt(row, 1) != null) {
                        if (!dtm.getValueAt(row, 1).toString().isEmpty()) {
                            String cor = dtm.getValueAt(row, 1).toString();
                            int quantidadeItem = ((Integer) tableItemVenda.getModel().getValueAt(row, 2)).intValue();
                            atualizaCor(cor, quantidadeItem, row);
                        }
                    }
                }
            }
        });

        //pular de campo com enter
        MetodosUtil.enterPularCampos(this);
        //define letras maiusculas
        MetodosUtil.letrasMaiusculas(this.getContentPane());

        //Logica para fechar tela pela botao do frame
        addListenerParaExibirMgsFecharTela();

        //Inicializa Acesso
        this.inicializaAcessoPorPerfil();

        //adicionando atalhos
        createAtalhos();
    }

    /**
     * valida se o produto e cor mencionados já foram inseridos na venda
     *
     * @param refCatalogo
     * @param cor
     */
    private boolean validExistProdutoCor(String refCatalogo, String cor, int row) {
        //ROBSON
        for (ItemProduto item : lstItemProduto.values()) {
            if (getProdutoByRow(row).getReferenciaCatalogo().equals(refCatalogo)
                    && item.getCor().getCodigo().equals(cor)) {

                JOptionPane.showMessageDialog(this, MessageVenda.PRODUTO_E_COR_EXISTE_GRID, MensagensUtil.ATENCAO, 1);
                return true;
            }
        }
        return false;
    }

    private void initializeList() {
        for (int i = 0; i < 12; i++) {
            popularGrid(new ItemPedido());
        }
    }

    /**
     * valida e atualiza itemProduto
     *
     * @param cor
     * @param row
     */
    private void atualizaCor(String cor, int quantidade, int row) {
        if (lstProduto != null) {
            if (lstProduto.containsKey(row)) {
                Produto produto = lstProduto.get(row);

                //atualizando produto com a base de dados
                atualizaCorProduto(produto.getReferenciaCatalogo(), row, cor, quantidade);
            }
        }
    }

    /**
     *
     * @param codigoProdutoCatalogo
     * @param row
     * @param cor
     * @param quantidade
     */
    private void buscarProduto(String codigoProdutoCatalogo, int row, String cor, int quantidade) {

        Produto produto = new Produto();
        produto.setReferenciaCatalogo(codigoProdutoCatalogo);

        //chama worker
        SwingWorkerPedidoVenda work = new SwingWorkerPedidoVenda();
        work.setProdutoPedidoVenda(produto);
        work.setFormVenda(this);
        work.setRowProduto(row);
        work.setCorProduto(cor);
        work.setQuantidadeProduto(quantidade);
        work.workSearchProdutos.execute();
    }

    /**
     *
     * @param referenciaCatalogo
     * @param row
     * @param cor
     * @param quantidade
     */
    private void atualizaCorProduto(String referenciaCatalogo, int row, String cor, int quantidade) {
        Produto produto = new Produto();
        produto.setReferenciaCatalogo(referenciaCatalogo);
        buscarProduto(produto.getReferenciaCatalogo(), row, cor, quantidade);

    }

    /**
     *
     * @param produto
     * @param row
     * @param cor
     * @param quantidade
     */
    public void refreshGridCorProduto(Produto produto, int row, String cor, int quantidade) {
        ItemProduto itemProduto = null;
        boolean erro = false;

        lstProduto.put(row, produto);

        for (ItemProduto item : produto.getListaItensProduto()) {
            if (item.getCor().getCodigo().equalsIgnoreCase(cor)) {
                if (quantidade > 0) {
                    if (item.getEstoqueAtual() >= quantidade) {
                        itemProduto = item;
                    } else {
                        tableItemVenda.getModel().setValueAt(0, row, 2);
                        erro = true;
                    }
                } else {
                    if (item.getEstoqueAtual() > 0) {
                        itemProduto = item;
                    } else {
                        tableItemVenda.getModel().setValueAt(null, row, 1);
                        erro = true;
                    }
                }

                break;
            }
        }


        if (itemProduto != null) {
            if (lstItemProduto == null) {
                lstItemProduto = new HashMap<Integer, ItemProduto>();
            }

            lstItemProduto.put(row, itemProduto);

        } else {
            String msgErro;
            if (erro) {
                msgErro = MessageVenda.ERRO_ESTOQUE_INDISPONIVEL;
            } else {
                msgErro = MessageVenda.ERRO_COR_NAO_EXISTE;
                tableItemVenda.getModel().setValueAt(null, row, 1);
            }

            JOptionPane.showMessageDialog(this, msgErro, MensagensUtil.ATENCAO, 1);
        }
    }

    /**
     * atualiza lista de produtos selecionado na grid passando produto como null
     * é removido o produto na possicao informada
     *
     * @param produto
     * @param possicao
     */
    private void atualizaListProdutos(Produto produto, int possicao) {
        if (lstProduto == null) {
            lstProduto = new HashMap<Integer, Produto>();
        }

        if (produto == null) {
            lstProduto.remove(possicao);
        }

        lstProduto.put(possicao, produto);
    }

    /**
     * atualizaTotais
     */
    private void atualizaTotais() {
        //atualiza total de items
        int row = tableItemVenda.getModel().getRowCount();
        int totalQuantidade = 0;
        //atualiza sub-total
        float subTotal = 0;
        for (int i = 0; i < row; i++) {
            if (tableItemVenda.getModel().getValueAt(i, 2) != null) {
                totalQuantidade += ((Integer) tableItemVenda.getModel().getValueAt(i, 2)).intValue();
            }
            subTotal += Float.parseFloat(tableItemVenda.getModel().getValueAt(i, 5).toString());
        }


        txtTotalItems.setText(totalQuantidade + "");
        jtxtSubTotal.setText(MetodosUtil.formatarValorDinheiro(subTotal));
        float valorDesconto = calcValorDesconto(subTotal);
        jtxtValorDesconto.setText(MetodosUtil.formatarValorDinheiro(valorDesconto));
        jtxtTotal.setText(MetodosUtil.formatarValorDinheiro(calcValorTotal(subTotal, valorDesconto)));
    }

    /**
     * Calcula o valor do desconto da venda
     *
     * @param subTotal
     * @return
     */
    private float calcValorDesconto(float subTotal) {
        return subTotal * Float.parseFloat("0.25");
    }

    /**
     * Calcula o valor total com desconto
     *
     * @param subTotal
     * @param valorDesconto
     * @return
     */
    private float calcValorTotal(float subTotal, float valorDesconto) {
        return subTotal - valorDesconto;
    }

    @Override
    public void clear() {
        lstProduto = null;
        lstItemProduto = null;
        txtNumeroOrcamento.setText(null);
        jtxtData.setText(null);

        cbFormaPagamento.setSelectedIndex(0);
        jtxtValorPedidoEscrito.setText(null);

        clearCamposRevendedor();
        clearItemsPedido();
    }

    /**
     * gera o numero de orçamento para a venda
     */
    private void gerarNumeroOrcamento() {
        //ROBSON
        SwingWorkerPedidoVenda work = new SwingWorkerPedidoVenda();
        work.setFormVenda(this);
        work.workGerarNumeroOrcamento.execute();

    }

    /**
     *
     * @param cod
     */
    public void setCodigoOrcamento(String cod) {
        txtNumeroOrcamento.setText(cod);
    }

    /**
     * popula o campo data cadastro com a data corrente
     */
    private void populaDataCadastro() {
        jtxtData.setValue(Calendar.getInstance().getTime());
    }

    /**
     * faz a busca de revendedor no server
     *
     * @return
     */
//    private List<ViewRevendedor> bucarRevendedor(Revendedor revendedor) throws ClientDCoracoesException {
////ROBSON
////        RevendedorServerImpl serverImpl = new RevendedorServerImpl();
////        try {
////            return serverImpl.recListaViewRevendedor(revendedor);
////        } catch (TransException ex) {
////            throw ex;
////        }
//        return null;
//    }
    /**
     * ***********************************************
     * Popular Revendedor *INICIO*
     * ***********************************************
     */
    public void popularRevendedor(Revendedor revendedor) {

        this.revendedor = revendedor;

        clearCamposRevendedor();

        popularDadosPrincipais(revendedor);
        popularContato((PessoaFisica) revendedor.getPessoa());
        jtxtCodigoRevendedor.setText(MetodosUtil.gerarCodigoFormatoPadrao(revendedor.getCodigo()));
        jtxtCodigoConfiscal.setText(revendedor.getCodigoConFiscal() + "");
        jtxtNotaFiscal.setText(revendedor.getNumeroNotaFiscal() + "");
        jtxtDataCadastro.setValue(revendedor.getDataCadastro());
        jtxtUltimaCompra.setValue(revendedor.getDataUltimaCompra());
        txtSituacao.setValue(returnEnumSituacao(revendedor.getSituacao()));
        jtxtLimiteCredito.setText(MetodosUtil.formatarValorDinheiro(revendedor.getLimiteCredito()));
        jtxtLimiteCredito.requestFocus();
        jtxtLimiteUso.setText(MetodosUtil.formatarValorDinheiro(revendedor.getLimiteEmUso()));
        jtxtLimiteUso.requestFocus();
        jtxtLimiteUtilizavel.setText(MetodosUtil.formatarValorDinheiro(revendedor.getLimiteUtilizavel()));
        jtxtLimiteUtilizavel.requestFocus();

        //direciona o foco da tela
        cbFormaPagamento.requestFocus();

        //recupera as prospecções do revendedor
        if (ControleAcesso.ATIVA_BTN_CONSULTAR_PROSPECCAO) {
            consultarProspeccoes();
        }
    }

    /**
     * retorna o valor da situacao informada
     *
     * @return
     */
    private String returnEnumSituacao(int situacao) {
        if (situacao == Enum_Situacao.ATIVO.getCodigo()) {
            return "Ativo";
        } else {
            return "Inativo";
        }
    }

    /**
     * Popula os campos de Dados Principais
     */
    private void popularDadosPrincipais(Revendedor revendedor) {
        txtRevendedor.setText(revendedor.getPessoa().getNome());
        popularEndereco(revendedor.getPessoa().getEndereco());
        jtxtCPF.setText(((PessoaFisica) revendedor.getPessoa()).getCpf());
        jtxtRG.setText(((PessoaFisica) revendedor.getPessoa()).getIdentidade());

        //ROBSON        
        XMLGregorianCalendar dateNasc = ((PessoaFisica) revendedor.getPessoa()).getDataNascimento();
        jtxtDataNascimento.setText(DateUtil.asString(dateNasc));
        cbEstadoCivil.setSelectedIndex(returnValueCbEstadoCivil(((PessoaFisica) revendedor.getPessoa()).getEstadoCivil()));
    }

    /**
     * Retorna o valor para do combobox para o EstadoCivil passado
     *
     * @return
     */
    private int returnValueCbEstadoCivil(int value) {
        if (Enum_EstadoCivil.CASADO.getCodigo() == value) {
            return 0;
        } else if (Enum_EstadoCivil.SOLTEIRO.getCodigo() == value) {
            return 1;
        } else if (Enum_EstadoCivil.SEPARADO.getCodigo() == value) {
            return 2;
        } else if (Enum_EstadoCivil.DIVORCIADO.getCodigo() == value) {
            return 3;
        } else {
            return 4;
        }
    }

    /**
     * Popula os campos de Endereço
     *
     * @param end
     */
    private void popularEndereco(Endereco end) {
        txtEndereco.setText(end.getRua());
        txtNumero.setText(end.getNumero());
        txtComplemento.setText(end.getComplemento());
        txtCidade.setText(end.getCidade());
        cbUF.setSelectedItem(Enum_UF.getType(end.getEstado()));
        jtxtCEP.setText(end.getCep());
    }

    /**
     * Popula os campos de Contato
     */
    private void popularContato(PessoaFisica pessoa) {
        popularTelefones(pessoa.getTelefones());
        popularEmail(pessoa.getEmails());
    }

    /**
     * Popula os telefones na tela
     *
     * @param list
     */
    private void popularTelefones(List<Telefone> list) {
        for (Telefone telefone : list) {
            if (telefone.getTipoTelefone() == Enum_TipoTelefone.RESIDENCIAL.getCodigo()) {
                jtxtTelefoneResidencial.setText(telefone.getNumero());
            }
            if (telefone.getTipoTelefone() == Enum_TipoTelefone.CELULAR.getCodigo()) {
                if (jtxtCelular1.getText().replace("-", "").trim().isEmpty()) {
                    jtxtCelular1.setText(telefone.getNumero());
                    cbOperadora1.setSelectedIndex(returnEnumOperadoraTelefonica(telefone.getOperadora()));
                } else {
                    jtxtCelular2.setText(telefone.getNumero());
                    cbOperadora2.setSelectedIndex(returnEnumOperadoraTelefonica(telefone.getOperadora()));
                }
            }
            if (telefone.getTipoTelefone() == Enum_TipoTelefone.COMERCIAL.getCodigo()) {
                jtxtTelefoneComercial.setText(telefone.getNumero());
            }
        }
    }

    /**
     * retorna o valor da operadora selecionada
     *
     * @param component
     * @return
     */
    private int returnEnumOperadoraTelefonica(String operadora) {
        if (operadora.equals(OperadorasTelefonicas.VIVO)) {
            return 0;
        }
        if (operadora.equals(OperadorasTelefonicas.TIM)) {
            return 1;
        }
        if (operadora.equals(OperadorasTelefonicas.CLARO)) {
            return 2;
        } else {
            return 3;
        }
    }

    /**
     * Popular os campos Email
     *
     * @param list
     */
    private void popularEmail(List<Email> list) {
        for (Email email : list) {
            if (jtxtEmail1.getText().isEmpty()) {
                jtxtEmail1.setText(email.getEnderecoEmail());
            } else {
                jtxtEmail2.setText(email.getEnderecoEmail());
            }
        }
    }

    /**
     * ***********************************************
     * Popular Revendedor *FIM* ***********************************************
     */
    /**
     * ***********************************************
     * Limpar Campos *INICIO* ***********************************************
     */
    /**
     * limpa todos os campos dá tela
     */
    private void clearCamposRevendedor() {
        clearPanelDadosPrincipais();
        clearPanelContato();

        jtxtCodigoRevendedor.setText(null);
        jtxtCodigoConfiscal.setText(null);
        jtxtNotaFiscal.setText(null);
        jtxtDataCadastro.setText(null);
        jtxtUltimaCompra.setText(null);
        txtSituacao.setText(null);
        jtxtLimiteCredito.setText(null);
        jtxtLimiteUso.setText(null);
        jtxtLimiteUtilizavel.setText(null);
        txtAprovacao.setText(null);
    }

    /**
     * limpa os campos de dados principais
     */
    private void clearPanelDadosPrincipais() {
        txtRevendedor.setText(null);
        txtEndereco.setText(null);
        txtNumero.setText(null);
        txtComplemento.setText(null);
        txtCidade.setText(null);
        cbUF.setSelectedIndex(0);
        jtxtCEP.setText(null);
        jtxtCPF.setText(null);
        jtxtRG.setText(null);
        jtxtDataNascimento.setText(null);
        cbEstadoCivil.setSelectedIndex(1);
    }

    /**
     * limpa os campos de contato
     */
    private void clearPanelContato() {
        jtxtTelefoneResidencial.setText(null);
        jtxtCelular1.setText(null);
        cbOperadora1.setSelectedIndex(0);
        jtxtTelefoneComercial.setText(null);
        jtxtCelular2.setText(null);
        cbOperadora2.setSelectedIndex(0);
        jtxtEmail1.setText(null);
        jtxtEmail2.setText(null);
    }

    private void clearItemsPedido() {
        limparGrid();
        txtTotalItems.setText(null);
        jtxtSubTotal.setText(null);
        jtxtValorDesconto.setText(null);
        jtxtTotal.setText(null);
    }

    /**
     * limpa os dados da grid
     */
    private void limparGrid() {
        DefaultTableModel dtm = (DefaultTableModel) tableItemVenda.getModel();
        int x = dtm.getRowCount();

        for (int a = 0; a < x; a++) {
            limpaPossicaoGrid(a);
        }
    }

    private void limpaPossicaoGrid(int possition) {
        DefaultTableModel dtm = (DefaultTableModel) tableItemVenda.getModel();
        ItemPedido aux = new ItemPedido();
        dtm.removeRow(possition);

        float valorTotal = aux.getQuantidade() * aux.getValorUnitario();
        String codigo = "";
        if (aux.getCodigo() != null) {
            codigo = aux.getCodigo().getCodigo();
        }
        dtm.insertRow(possition, new Object[]{
                    codigo,
                    aux.getCor(),
                    aux.getQuantidade(),
                    aux.getDescricao(),
                    aux.getValorUnitario(),
                    valorTotal + ""
                });
    }

    /**
     * ***********************************************
     * Limpar Campos *FIM* ***********************************************
     */
    /**
     * *************************************
     * Grid Items de venda *INICIO* *************************************
     */
    /**
     * Valida campos obrigatórios do item de venda
     *
     * @return
     */
    private StringBuilder validarItemVenda() {
        DefaultTableModel dtm = (DefaultTableModel) tableItemVenda.getModel();
        if (dtm.getRowCount() == 0) {
            return new StringBuilder();
        }


        boolean validCor = false, validQuantidade = false;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            if (!dtm.getValueAt(i, 0).toString().isEmpty()) {
                if (dtm.getValueAt(i, 1) == null || dtm.getValueAt(i, 1).toString().isEmpty()) {
                    validCor = true;
                }

                if (dtm.getValueAt(i, 2) == null || ((Integer) dtm.getValueAt(i, 2)).intValue() == 0) {
                    validQuantidade = true;
                }
            }

            if (validCor && validQuantidade) {
                break;
            }
        }


        StringBuilder stringError = new StringBuilder();

        if (validCor) {
            stringError.append(MessageVenda.COLUNA_COR_OBRIGATORIO);
        }
        if (validQuantidade) {
            if (validCor) {
                stringError.append("\n");
            }

            stringError.append(MessageVenda.COLUNA_QUANTIDADE_OBRIGATORIO);
        }

        return stringError;
    }

    /**
     * popula a grid
     *
     * @param aux
     */
    private void popularGrid(ItemPedido aux) {

        DefaultTableModel dtm = (DefaultTableModel) tableItemVenda.getModel();

        float valorTotal = aux.getQuantidade() * aux.getValorUnitario();
        String codigo = "";
        if (aux.getCodigo() != null) {
            codigo = aux.getCodigo().getCodigo();
        }

        if (codigo.isEmpty()) {
            dtm.addRow(new Object[]{
                        codigo,
                        aux.getCor(),
                        aux.getQuantidade(),
                        aux.getDescricao(),
                        aux.getValorUnitario(),
                        valorTotal + ""
                    });

        } else {
            int row = recProximaLinhaVazia(dtm);
            dtm.removeRow(row);
            dtm.insertRow(row, new Object[]{
                        codigo,
                        aux.getCor(),
                        aux.getQuantidade(),
                        aux.getDescricao(),
                        aux.getValorUnitario(),
                        valorTotal + ""
                    });
        }
    }

    /**
     * Recupera a proxima possição da grid para inserir o novo objeto
     *
     * @param dtm
     * @return
     */
    private int recProximaLinhaVazia(DefaultTableModel dtm) {

        int value = 0;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            if (dtm.getValueAt(i, 0).toString().isEmpty()) {
                value = i;
                break;
            }
        }

        return value;
    }

    /**
     * metodo para remover o item selecionado
     */
    private void removeCor() {
        try {

            JTable table = tableItemVenda;
            int row = table.getSelectedRow();

            DefaultTableModel dtm = (DefaultTableModel) table.getModel();
            dtm.removeRow(row);

        } catch (java.lang.Exception ex) {
            Logger.getLogger(FormVenda.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, MessageVenda.ERRO_REMOVER_ITEM, MensagensUtil.ERRO, 0);
        }

        JOptionPane.showMessageDialog(this, MessageVenda.SUCESSO_REMOVER_ITEM, MensagensUtil.SUCESSO, 1);
    }

    /**
     * Recupera os items de pedido da grid
     */
    private void pushToModelItemPedido() {

        //Para a edição na tabela
        tableItemVenda.getDefaultEditor(String.class).stopCellEditing();
//        tableItemVenda.getDefaultEditor(Integer.class).stopCellEditing();

        if (pedido == null) {
            pedido = new PedidoVenda();
        }

        DefaultTableModel dtm = (DefaultTableModel) tableItemVenda.getModel();
        int x = dtm.getRowCount();
        for (int i = 0; i < x; i++) {
            if (dtm.getValueAt(i, 0).toString().isEmpty()) {
                continue;
            }

            ItemProduto item = (ItemProduto) lstItemProduto.get(i);

            ItemPedido itemPedido = returnObjListPositionGrid(pedido.getListaItensPedido(), i);
            itemPedido.setIdItemProduto(item.getId());
            if (dtm.getValueAt(i, 0) != null) {
                CodigoItem cod = new CodigoItem();
                cod.setCodigo(dtm.getValueAt(i, 0).toString());
                cod.setTipo(Enum_Tipo_Codigo.REFERENCIA_CATALOGO.getCodigo());
                itemPedido.setCodigo(cod);
            }
            if (dtm.getValueAt(i, 1) != null) {
                itemPedido.setCor(dtm.getValueAt(i, 1).toString());
                itemPedido.setCorPorExtenso(item.getCor().getDescricao());
            }

            //ROBSON
            itemPedido.setCodigoFiscal(getProdutoByRow(i).getCodigoForFiscal());
            itemPedido.setQuantidade(Integer.parseInt(dtm.getValueAt(i, 2).toString()));
            itemPedido.setDescricao(dtm.getValueAt(i, 3).toString());
            itemPedido.setValorUnitario(Float.parseFloat(dtm.getValueAt(i, 4).toString()));
            itemPedido.setValorTotal(Float.parseFloat(dtm.getValueAt(i, 5).toString()));

            if (pedido.getListaItensPedido().contains(itemPedido)) {
                pedido.getListaItensPedido().remove(itemPedido);
                pedido.getListaItensPedido().add(i, itemPedido);
            } else {
                pedido.getListaItensPedido().add(itemPedido);
            }
        }
    }

    private ItemPedido returnObjListPositionGrid(List<ItemPedido> list, int position) {

        if (list.isEmpty() || list.size() <= position) {
            return new ItemPedido();
        }

        return list.get(position);
    }

    /**
     * Busca produto pelo codigo de referencia do catalogo
     */
    private void buscarProduto(String codigoProdutoCatalogo, int row) {

        Produto produto = new Produto();
        produto.setReferenciaCatalogo(codigoProdutoCatalogo);

        //chama worker
        SwingWorkerPedidoVenda work = new SwingWorkerPedidoVenda();
        work.setProdutoPedidoVenda(produto);
        work.setFormVenda(this);
        work.setRowProduto(row);
        work.workSearchProdutos.execute();
    }

    public void returnListProduto(List<Produto> list, int row) {
        Produto produto = null;

        if (list.isEmpty()) {
            JOptionPane.showMessageDialog(this, MessageCompra.CODIGO_INVALIDO, MensagensUtil.ATENCAO, 1);
        } else {
            produto = list.get(0);
        }

        if (produto != null) {
            atualizaListProdutos(produto, row);
            atualizaTableDadosProduto(produto, row);
        } else {
            limpaPossicaoGrid(row);
        }
    }

    /**
     * Atualiza a table de items com o produto passado
     *
     * @param produto
     */
    private void atualizaTableDadosProduto(Produto produto, int row) {


//        RowEditorModel rm = new RowEditorModel();
//        ((JTableX)tableItemVenda).setRowEditorModel(rm);
//        JComboBox combo  = new JComboBox();
//        combo.addItem("A");
//        combo.addItem("B");
//        combo.addItem("C");
//        DefaultCellEditor ed = new DefaultCellEditor(combo);
//        rm.addEditorForRow(row,ed);

        tableItemVenda.getModel().setValueAt(produto.getDescricao(), row, 3);
        tableItemVenda.getModel().setValueAt(produto.getValorVenda(), row, 4);

        atualizaValorTotalItemProduto(row);

    }

    private void atualizaValorTotalItemProduto(int row) {

        if (tableItemVenda.getModel().getValueAt(row, 2) != null) {
            int quantidade = ((Integer) tableItemVenda.getModel().getValueAt(row, 2)).intValue();
            float custo = ((Float) tableItemVenda.getModel().getValueAt(row, 4)).floatValue();

            float total = quantidade * custo;
            tableItemVenda.getModel().setValueAt(total + "", row, 5);
        }
    }

    /**
     * Metodo execultado para enviar os dados para o server e realizar o
     * cadastro
     *
     * @param pedido
     */
    private void mantemPedido(PedidoVenda pedido) {
        SwingWorkerPedidoVenda worker = new SwingWorkerPedidoVenda();
        worker.setPedido(pedido);
        worker.setFormVenda(this);
        worker.workSalvaPedidoVenda.execute();

    }

    /**
     * *************************************
     * Grid Items de venda *FIM* *************************************
     */
    /**
     * metodo para desabilitar ou habilitar todos os campos da tela
     *
     * @param b
     */
    private void disableTela(boolean b) {
        disableAbaDadosRevendedor(b);
    }

    private void disableAbaDadosRevendedor(boolean b) {
        jtxtCodigoRevendedor.setEnabled(b);
        cbFormaPagamento.setEnabled(b);
        jtxtValorPedidoEscrito.setEnabled(b);
    }

    private void disableAbaItemsPedido(boolean b) {
        tableItemVenda.setEnabled(b);
        btnNovoItem.setEnabled(b);
        btnRemoverItem.setEnabled(b);

        btnSalvar.setEnabled(b);

    }

    /**
     * Faz a validação do credito do cliente e do valor dá compra e confirma se
     * cliente pode efetuar a compra
     */
    private void aprovarVenda() {
        if (revendedor != null && !jtxtValorPedidoEscrito.getText().isEmpty()) {
            try {
                pedido = new PedidoVenda();
                pedido.setRevendedor(revendedor);
                pedido.setValorPedidoEscrito(Float.parseFloat(jtxtValorPedidoEscrito.getText().trim().replace(".", "").replace(",", ".")));
                pedido.setPagamento(pushToModelFormaPagamento());

                PedidoServerImpl serverImpl = new PedidoServerImpl();
                if (serverImpl.aprovarPedido(pedido)) {
                    txtAprovacao.setText("APROVADO");
                    disableAbaItemsPedido(true);
                } else {
                    txtAprovacao.setText("NÃO APROVADO");
                    disableAbaItemsPedido(false);
                }
            } catch (ClientDCoracoesException ex) {
                Logger.getLogger(FormVenda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * Realiza busca de prospeccao por revendedor
     */
    public void consultarProspeccoes() {
//ROBSON
        Alerta prospeccao = new Alerta();
        prospeccao.setPessoa(revendedor.getPessoa());
        prospeccao.setSituacaoAlerta(Enum_Situacao_Alerta.EMABERTO.getCodigo());


        SwingWorkerPedidoVenda work = new SwingWorkerPedidoVenda();
        work.setAlerta(prospeccao);
        work.setFormVenda(this);
        work.workSearchAlertas.execute();;
    }

    public void afterConsultaProspeccoes(List<Alerta> alertas) {
        if (alertas.isEmpty()) {
            lblAlertaProspeccao.setVisible(false);
        } else {
            lblAlertaProspeccao.setVisible(true);
        }
    }

    /**
     * Logica para quando o usuario clicar no botao fechar do frame exibir a
     * tela de confirmação
     */
    private void addListenerParaExibirMgsFecharTela() {
        //cancela acao do botao fechar
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);

        //add windowsListener sobrescrevendo o metodo windowClosing
        addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                if (e.getID() == WindowEvent.WINDOW_CLOSING) {
                    close();
                }
            }
        });
    }

    @Override
    public void inicializaAcessoPorPerfil() {
        if (!ControleAcesso.ATIVA_BTN_CADASTRAR_PEDIDO_VENDA) {
            disableTela(true);
        }
        this.btnNovo.setEnabled(ControleAcesso.ATIVA_BTN_CADASTRAR_PEDIDO_VENDA);
        this.btnPesquisar.setEnabled(ControleAcesso.ATIVA_BTN_CONSULTAR_PEDIDO_VENDA);
        this.btnProspeccoes.setEnabled(ControleAcesso.ATIVA_BTN_CONSULTAR_PROSPECCAO);
    }

    /**
     * ******************************************************************************
     * monta os atalhos da tela
     */
    private void createAtalhos() {
        InputMap imap = rootPane.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        imap.put(KeyStroke.getKeyStroke("F2"), "panel.buttonF2press");
        imap.put(KeyStroke.getKeyStroke("F3"), "panel.buttonF3press");
        imap.put(KeyStroke.getKeyStroke("F4"), "panel.buttonF4press");
        imap.put(KeyStroke.getKeyStroke("F5"), "panel.buttonF5press");
        ActionMap amap = rootPane.getActionMap();
        amap.put("panel.buttonF2press", new Close());
        amap.put("panel.buttonF3press", new Orcamento());
        amap.put("panel.buttonF4press", new AlterCabecalho());
        amap.put("panel.buttonF5press", new SearchProduto());

    }

    @Override
    public void showFrame() {
        setLocationRelativeTo(null);
        initialize();
        this.setVisible(true);
    }

    /**
     *
     * @param row
     * @return
     */
    private Produto getProdutoByRow(int row) {
        return this.lstProduto.get(row);
    }

    /**
     * tratamento do atalho para tecla F2
     */
    private class Close extends AbstractAction {

        @Override
        public void actionPerformed(ActionEvent e) {
            close();
        }
    }

    /**
     * tratamento do atalho para tecla F3
     */
    private class Orcamento extends AbstractAction {

        @Override
        public void actionPerformed(ActionEvent e) {
        }
    }

    /**
     * tratamento do atalho para tecla F4
     */
    private class AlterCabecalho extends AbstractAction {

        @Override
        public void actionPerformed(ActionEvent e) {
            jTabbedPane.setSelectedIndex(0);
            jtxtCodigoRevendedor.requestFocus();
        }
    }

    /**
     * tratamento do atalho para tecla F5
     */
    private class SearchProduto extends AbstractAction {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (formProduto == null) {
                formProduto = new FormConsultaProduto(false, new FormProduto());
            }
            formProduto.setVisible(true);
        }
    }
}
