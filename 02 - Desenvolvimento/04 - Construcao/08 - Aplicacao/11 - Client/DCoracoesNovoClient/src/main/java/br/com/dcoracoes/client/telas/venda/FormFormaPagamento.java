/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.dcoracoes.client.telas.venda;

import br.com.dcoracoes.client.enuns.Enum_Forma_Pagamento;
import br.com.dcoracoes.client.swingworker.SwingWorkerPedidoVenda;
import br.com.dcoracoes.client.util.MensagensUtil;
import br.com.dcoracoes.client.util.MetodosUtil;
import br.com.dcoracoes.client.util.message.MessageVenda;
import br.com.dcoracoes.servico.service.Pagamento;
import br.com.dcoracoes.servico.service.Parcela;
import br.com.dcoracoes.servico.service.PedidoVenda;
import br.com.dcoracoes.servico.service.Revendedor;
import br.com.wedesenv.common.date.DateUtil;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author rerum
 */
public class FormFormaPagamento extends javax.swing.JDialog{

    public final String VALOR_ZERO = "0,00";
    
    private Revendedor revendedor;
    private PedidoVenda pedidoVenda;
    private FormVenda formVenda;
    
    
    /**
     * Creates new form FormFormaPagamento
     */
    public FormFormaPagamento() {
        initComponents();
    }
    
    public FormFormaPagamento(FormVenda pFormVenda){                
        initComponents();
        setLocationRelativeTo(null);
        setModal(true);
        initAtributos(pFormVenda);    
        initCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAprovar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jtxtValorEmDinheiro = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtxtValorBonus = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jtxtValorCheque1 = new javax.swing.JFormattedTextField();
        jtxtValorCheque2 = new javax.swing.JFormattedTextField();
        jtxtDataLiberacaoCheque1 = new javax.swing.JFormattedTextField();
        jtxtDataLiberacaoCheque2 = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Forma Pagamento");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        btnAprovar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAprovar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/32x32/img_edit_32x32.png"))); // NOI18N
        btnAprovar.setText("APROVAR");
        btnAprovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprovarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(134, 134, 134)
                    .addComponent(btnAprovar)
                    .addContainerGap(127, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 69, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addComponent(btnAprovar, 0, 0, Short.MAX_VALUE)
                    .addGap(14, 14, 14)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(0));

        jtxtValorEmDinheiro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtxtValorEmDinheiro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtValorEmDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtValorEmDinheiroActionPerformed(evt);
            }
        });
        jtxtValorEmDinheiro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtValorEmDinheiroKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtValorEmDinheiroKeyReleased(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("VALOR EM DINHEIRO:");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("BÔNUS:");

        jtxtValorBonus.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtxtValorBonus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtValorBonus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtValorBonusKeyReleased(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("VALOR 1º CHEQUE:");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("VALOR 2º CHEQUE:");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("DATA LIBERAÇÃO 1º CHEQUE:");

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("DATA LIBERAÇÃO 2º CHEQUE:");

        jtxtValorCheque1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtxtValorCheque1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtValorCheque1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtValorCheque1KeyReleased(evt);
            }
        });

        jtxtValorCheque2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jtxtValorCheque2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtxtValorCheque2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtValorCheque2KeyReleased(evt);
            }
        });

        try {
            jtxtDataLiberacaoCheque1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtxtDataLiberacaoCheque1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtDataLiberacaoCheque1FocusLost(evt);
            }
        });
        jtxtDataLiberacaoCheque1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtDataLiberacaoCheque1KeyReleased(evt);
            }
        });

        try {
            jtxtDataLiberacaoCheque2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtxtDataLiberacaoCheque2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtDataLiberacaoCheque2FocusLost(evt);
            }
        });
        jtxtDataLiberacaoCheque2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtDataLiberacaoCheque2KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxtValorBonus)
                    .addComponent(jtxtValorEmDinheiro)
                    .addComponent(jtxtValorCheque1)
                    .addComponent(jtxtValorCheque2)
                    .addComponent(jtxtDataLiberacaoCheque1)
                    .addComponent(jtxtDataLiberacaoCheque2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtValorEmDinheiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtValorBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtValorCheque1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtDataLiberacaoCheque1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtValorCheque2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jtxtDataLiberacaoCheque2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtValorEmDinheiroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtValorEmDinheiroKeyReleased
        MetodosUtil.defineSizeMax(8, jtxtValorEmDinheiro);      
        
        String valor = jtxtValorEmDinheiro.getText();
        
        if (valor.isEmpty()){
            jtxtValorCheque1.setEnabled(true);
            jtxtDataLiberacaoCheque1.setEnabled(true);
            jtxtValorCheque2.setEnabled(true);
            jtxtDataLiberacaoCheque2.setEnabled(true);
        }else{
            jtxtValorCheque1.setEnabled(false); 
            jtxtDataLiberacaoCheque1.setEnabled(false);
            jtxtValorCheque2.setEnabled(false);
            jtxtDataLiberacaoCheque2.setEnabled(false);
        }
        
    }//GEN-LAST:event_jtxtValorEmDinheiroKeyReleased

    private void jtxtValorBonusKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtValorBonusKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtValorBonusKeyReleased

    private void jtxtValorCheque1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtValorCheque1KeyReleased
        // TODO add your handling code here:
        String valor = jtxtValorCheque1.getText();
        isEnableValorEmDinheiro(valor);        
    }//GEN-LAST:event_jtxtValorCheque1KeyReleased

    
    private void isEnableValorEmDinheiro(String valor)
    {
        if (valor.isEmpty()){
            if (jtxtValorCheque1.getText().isEmpty() &
                jtxtValorCheque2.getText().isEmpty() &
                jtxtDataLiberacaoCheque1.getText().replace("/", "").trim().isEmpty() &
                jtxtDataLiberacaoCheque2.getText().replace("/", "").trim().isEmpty() )
            {
                jtxtValorEmDinheiro.setEnabled(true);
            }
        }else{            
            jtxtValorEmDinheiro.setEnabled(false);
        }
    }
    
    private void jtxtValorCheque2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtValorCheque2KeyReleased
        // TODO add your handling code here:
        String valor = jtxtValorCheque2.getText();
        isEnableValorEmDinheiro(valor);    
    }//GEN-LAST:event_jtxtValorCheque2KeyReleased

    private void jtxtDataLiberacaoCheque1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtDataLiberacaoCheque1FocusLost
        // TODO add your handling code here:
        if (!MetodosUtil.validData(jtxtDataLiberacaoCheque1.getText())) {
            JOptionPane.showMessageDialog(this, MensagensUtil.MENSAGEM_ERRO_DATA_INVALIDA, MensagensUtil.ATENCAO, 2);

            jtxtDataLiberacaoCheque1.setValue(null);
            jtxtDataLiberacaoCheque1.requestFocus();
        }
    }//GEN-LAST:event_jtxtDataLiberacaoCheque1FocusLost

    private void jtxtDataLiberacaoCheque2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtDataLiberacaoCheque2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtDataLiberacaoCheque2FocusLost

    private void btnAprovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprovarActionPerformed
        // TODO add your handling code here: 
        if (validateForm())
            aprovarVenda();
    }//GEN-LAST:event_btnAprovarActionPerformed
    
    
    private void jtxtValorEmDinheiroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtValorEmDinheiroKeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jtxtValorEmDinheiroKeyPressed

    private void jtxtValorEmDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtValorEmDinheiroActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jtxtValorEmDinheiroActionPerformed

    private void jtxtDataLiberacaoCheque1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDataLiberacaoCheque1KeyReleased
        // TODO add your handling code here:
        String valor = jtxtDataLiberacaoCheque1.getText().replace("/", "").trim();
        isEnableValorEmDinheiro(valor);  
    }//GEN-LAST:event_jtxtDataLiberacaoCheque1KeyReleased

    private void jtxtDataLiberacaoCheque2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtDataLiberacaoCheque2KeyReleased
        // TODO add your handling code here:
        String valor = jtxtDataLiberacaoCheque2.getText().replace("/", "").trim();
        isEnableValorEmDinheiro(valor);  
    }//GEN-LAST:event_jtxtDataLiberacaoCheque2KeyReleased

    
    /**
     * Faz a validação do credito do cliente e do valor dá compra e confirma se
     * cliente pode efetuar a compra
     */
    private void aprovarVenda() {
        if (revendedor != null && pedidoVenda != null) {
            
            pedidoVenda.setPagamento(pushToModelFormaPagamento());

            SwingWorkerPedidoVenda work = new SwingWorkerPedidoVenda();
            work.setPedido(pedidoVenda);
            work.setFormFormaPagamento(this);
            work.workAprovarPedidoVenda.execute();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormFormaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormFormaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormFormaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormFormaPagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FormFormaPagamento().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAprovar;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JFormattedTextField jtxtDataLiberacaoCheque1;
    private javax.swing.JFormattedTextField jtxtDataLiberacaoCheque2;
    private javax.swing.JFormattedTextField jtxtValorBonus;
    private javax.swing.JFormattedTextField jtxtValorCheque1;
    private javax.swing.JFormattedTextField jtxtValorCheque2;
    private javax.swing.JFormattedTextField jtxtValorEmDinheiro;
    // End of variables declaration//GEN-END:variables

    private Pagamento pushToModelFormaPagamento() {
               
        // passos para criar o pagamento
        Pagamento pagamentoVenda = new Pagamento();
        
        //1. pego o bonus
        if (!jtxtValorBonus.getText().isEmpty())
            pagamentoVenda.setBonus(MetodosUtil.convertStringToFloat(jtxtValorBonus.getText()));
        
        //2. verifico se avista ou prazo
        if (!jtxtValorEmDinheiro.getText().isEmpty()){
            //pagamento a vista
            pagamentoVenda.setFormaPagamento(Enum_Forma_Pagamento.AVISTA.getTipo());
            pagamentoVenda.setValor(MetodosUtil.convertStringToFloat(jtxtValorEmDinheiro.getText()));
        }else{
            //pagamento a prazo
            pagamentoVenda.getListaParcelas().addAll(addParcelas());
        }
                
        return pagamentoVenda;           
    }
    
     /**
     * *
     *
     * @param isAprovada
     */
    public void afterAprovarVenda(Boolean isAprovada) {
        if (isAprovada) {                        
            JOptionPane.showMessageDialog(this, MessageVenda.MSG_VENDA_APROVADA, MensagensUtil.ATENCAO, 1);                        
            this.formVenda.disableAbaItemsPedido(true); 
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, MessageVenda.MSG_VENDA_REPROVADA, MensagensUtil.ATENCAO, 1);
            //this.formVenda.disableAbaItemsPedido(false);
        }
    }

    /**
     * add parcelas do pagamento
     * @return 
     */
    private List<Parcela> addParcelas() {
        
        List<Parcela> parcelas = new ArrayList<Parcela>();
        
        //add parcela 1
        if (!jtxtValorCheque1.getText().isEmpty())
        {
            Parcela parcelaCheque1 = new Parcela();
            parcelaCheque1.setValor(MetodosUtil.convertStringToFloat(jtxtValorCheque1.getText()));
            
            if (jtxtDataLiberacaoCheque1.getText().isEmpty())
                parcelaCheque1.setDataVencimento(DateUtil.dateAsXMLGregorianCalendar((Date) jtxtDataLiberacaoCheque1.getValue()));           
            
            parcelas.add(parcelaCheque1);
        }
        
        //add parcela 2
        if (!jtxtValorCheque2.getText().isEmpty())
        {
            Parcela parcelaCheque2 = new Parcela();
            parcelaCheque2.setValor(MetodosUtil.convertStringToFloat(jtxtValorCheque2.getText()));
            
            if (jtxtDataLiberacaoCheque2.getText().isEmpty())
                parcelaCheque2.setDataVencimento(DateUtil.dateAsXMLGregorianCalendar((Date) jtxtDataLiberacaoCheque2.getValue()));           
            
            parcelas.add(parcelaCheque2);
        }
        
        return parcelas;
    }

    /**
     * valida se todos os campos estão populados
     * @return 
     */
    private boolean validateForm() {
        
        //valido se alguma forma de pagamento foi passada
        if (jtxtValorEmDinheiro.getText().isEmpty() && jtxtValorEmDinheiro.isEnabled()){
            JOptionPane.showMessageDialog(this, "Campo valor vazio!!!",MensagensUtil.ATENCAO, 1);
            return false;
        }else{
            if (jtxtValorCheque1.getText().isEmpty() && jtxtValorCheque2.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Campo valor para os cheques 1º e 2º estão vazios!!!",MensagensUtil.ATENCAO, 1);   
                return false;
            }
        }
        
        
        //valido somente para os campos da forma de pagamento a prazo
        //os campos de cheque
        //cheque 1
        if (!jtxtValorCheque1.getText().isEmpty() &&
                MetodosUtil.isDataEmpty(jtxtDataLiberacaoCheque1.getText()) &&
                jtxtDataLiberacaoCheque1.isEnabled()){
            JOptionPane.showMessageDialog(this, "Campo Data Liberação para o 1º está vazio!!!",MensagensUtil.ATENCAO, 1);
            return false;
        }
        
        //cheque 2
        if (!jtxtValorCheque2.getText().isEmpty() &&
                MetodosUtil.isDataEmpty(jtxtDataLiberacaoCheque2.getText()) &&
                jtxtDataLiberacaoCheque2.isEnabled()){
            JOptionPane.showMessageDialog(this, "Campo Data Liberação para o 2º está vazio!!!",MensagensUtil.ATENCAO, 1);
            return false;
        }
        
        return true;
    }

    /**
     * 
     * @param pFormVenda 
     */
    private void initAtributos(FormVenda pFormVenda) {
        this.formVenda = pFormVenda;        
        this.revendedor = pFormVenda.getRevendedor();               
        
        if (pFormVenda.getPedido() == null)        
            this.formVenda.setPedidoVenda(new PedidoVenda());
        
        pedidoVenda = pFormVenda.getPedido();
        pedidoVenda.setRevendedor(revendedor);
        pedidoVenda.setValorPedidoEscrito(MetodosUtil.convertStringToFloat(pFormVenda.getJtxtValorPedidoEscrito().getText()));                        
    }

    private void initCampos() {
        
        if (pedidoVenda.getPagamento() != null)
        {
            populaDadosPagamento(pedidoVenda.getPagamento());
        }else{
            this.jtxtValorBonus.setText(VALOR_ZERO);
            this.jtxtValorCheque1.setText(VALOR_ZERO);
            this.jtxtValorCheque2.setText(VALOR_ZERO);
            this.jtxtValorEmDinheiro.setText(VALOR_ZERO);
        }
    }

    private void populaDadosPagamento(Pagamento pagamento) {
        
        this.jtxtValorBonus.setText(MetodosUtil.formatarValorDinheiro(pagamento.getBonus()));
        if (pagamento.getFormaPagamento() == Enum_Forma_Pagamento.AVISTA.getTipo())
        {
            this.jtxtValorEmDinheiro.setText(MetodosUtil.formatarValorDinheiro(pagamento.getValor()));   
            
            this.jtxtDataLiberacaoCheque1.setEnabled(false);
            this.jtxtDataLiberacaoCheque2.setEnabled(false);
            this.jtxtValorCheque1.setEnabled(false);
            this.jtxtValorCheque2.setEnabled(false);
        }else{
            if (pagamento.getListaParcelas() != null && pagamento.getListaParcelas().size() > 0){
                               
                Parcela parcela1 = pagamento.getListaParcelas().get(0);
                jtxtDataLiberacaoCheque1.setText(DateUtil.asString(parcela1.getDataVencimento()));
                jtxtValorCheque1.setText(MetodosUtil.formatarValorDinheiro(parcela1.getValor()));            
                
                if (pagamento.getListaParcelas().size() > 1){
                    Parcela parcela2 = pagamento.getListaParcelas().get(1);
                    jtxtDataLiberacaoCheque2.setText(DateUtil.asString(parcela2.getDataVencimento()));
                    jtxtValorCheque2.setText(MetodosUtil.formatarValorDinheiro(parcela2.getValor()));            
                }   
                
                
                this.jtxtValorEmDinheiro.setEnabled(false);
            }
        }                
    }
}
